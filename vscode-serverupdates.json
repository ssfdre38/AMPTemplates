[
    {
        "UpdateStageName": "Create Workspace Directory",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}workspace"
    },
    {
        "UpdateStageName": "Clean VS Code Server Directory",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd vscode-server && echo 'Cleaning old VS Code Server files...'; rm -rf bin extensions node_modules out package.json product.json node LICENSE vscode-server-linux-* 2>/dev/null || true; echo 'Directory cleaned'\"",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "VS Code Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "x86_64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd vscode-server && echo 'Downloading Microsoft VS Code Server for Linux x64'; wget -qO vscode-server.tar.gz 'https://update.code.visualstudio.com/latest/server-linux-x64/stable' || { echo 'Download failed'; exit 1; }; echo 'Extracting VS Code Server...'; tar -xzf vscode-server.tar.gz && rm -f vscode-server.tar.gz && echo 'Moving files...'; find . -maxdepth 1 -type d -name 'vscode-server-linux-*' -exec sh -c 'mv \"$1\"/* . && rmdir \"$1\"' _ {} \\; && echo 'Microsoft VS Code Server downloaded and extracted'\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "VS Code Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "aarch64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd vscode-server && echo 'Downloading Microsoft VS Code Server for Linux ARM64'; wget -qO vscode-server.tar.gz 'https://update.code.visualstudio.com/latest/server-linux-arm64/stable' || { echo 'Download failed'; exit 1; }; echo 'Extracting VS Code Server...'; tar -xzf vscode-server.tar.gz && rm -f vscode-server.tar.gz && echo 'Moving files...'; find . -maxdepth 1 -type d -name 'vscode-server-linux-*' -exec sh -c 'mv \"$1\"/* . && rmdir \"$1\"' _ {} \\; && echo 'Microsoft VS Code Server downloaded and extracted'\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Clean VS Code Server Directory",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"Set-Location -Path 'vscode-server'; Write-Output 'Cleaning old VS Code Server files...'; Remove-Item -Path @('bin','extensions','node_modules','out','package.json','product.json','node.exe','LICENSE') -Recurse -Force -ErrorAction SilentlyContinue; Get-ChildItem -Directory | Where-Object { $_.Name -like 'vscode-server-win32-*' } | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue; Write-Output 'Directory cleaned'\"",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "VS Code Server Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Set-Location -Path 'vscode-server'; Write-Output 'Downloading Microsoft VS Code Server for Windows'; try { Invoke-WebRequest -UseBasicParsing -Uri 'https://update.code.visualstudio.com/latest/server-win32-x64/stable' -OutFile 'vscode-server.zip' -ErrorAction Stop; Write-Output 'Extracting VS Code Server...'; Expand-Archive -Path 'vscode-server.zip' -DestinationPath '.' -Force; Remove-Item 'vscode-server.zip' -Force; Get-ChildItem -Directory | Where-Object { $_.Name -like 'vscode-server-win32-*' } | ForEach-Object { Get-ChildItem $_.FullName | Move-Item -Destination '.' -Force; Remove-Item $_.FullName -Recurse -Force }; Write-Output 'Microsoft VS Code Server downloaded and extracted' } catch { Write-Output 'Download/extract failed'; exit 1; }\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Make Server Executable",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "SetExecutableFlag",
        "UpdateSourceArgs": "{{$FullBaseDir}}bin/code-server"
    }
]